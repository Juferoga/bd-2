--Autor : Alba Consuelo Nieto.
--TO DO

CREATE TABLE DOCENTE
(
  K_NIT NUMBER(12, 0) NOT NULL 
, N_NOMBRE VARCHAR2(50 BYTE) NOT NULL 
, N_APELLIDO VARCHAR2(50 BYTE) NOT NULL 
, CONSTRAINT DOCENTE_PK PRIMARY KEY 
  (
    K_NIT 
  )
  ENABLE 
) 
;

CREATE TABLE ESTUDIANTE 
(
  K_CODEST NUMBER(11, 0) NOT NULL 
, N_NOMBRE VARCHAR2(50 BYTE) NOT NULL 
, N_APELLIDO VARCHAR2(50 BYTE) NOT NULL 
, CONSTRAINT ESTUDIANTE_PK PRIMARY KEY 
  (
    K_CODEST 
  )
  ENABLE 
) 
;

-- **TODO Crear un constraint para validar que el nombre 
-- del día en la tabla HORARIO sea LU, MA, MI, JU, VI
CREATE TABLE HORARIO 
(
  K_HORARIO NUMBER(10, 0) NOT NULL 
, Q_HORAINI VARCHAR2(5 BYTE) NOT NULL 
, Q_HORAFIN VARCHAR2(5 BYTE) NOT NULL 
, N_DIA VARCHAR2(2 BYTE) NOT NULL 
, CONSTRAINT HORARIO_PK PRIMARY KEY 
  (
    K_HORARIO 
  )
  ENABLE 
, CONSTRAINT name_validator CHECK (N_DIA IN ('LU', 'MA', 'MI', 'JU', 'VI'));
) 
;

-- **TODO Crear la llave única GRUPO_UK1 con los 
-- atributos   K_ASIGNATURA, Q_ANIO, Q_PERIODO, K_CODGRUPO
CREATE TABLE GRUPO 
(
  K_CODGRUPO NUMBER(10, 0) NOT NULL 
, K_ASIGNATURA NUMBER(7, 0) NOT NULL 
, K_NIT NUMBER(12, 0) 
, Q_ANIO NUMBER(4, 0) NOT NULL 
, N_GRUPO NUMBER(2, 0) NOT NULL 
, Q_PERIODO NUMBER(1, 0) NOT NULL 
, Q_CUPMAX NUMBER(3, 0) NOT NULL 
, CONSTRAINT GRUPO_PK PRIMARY KEY
  (
    K_ASIGNATURA, K_CODGRUPO, Q_ANIO, Q_PERIODO 
  )
  ENABLE 
, CONSTRAINT GRUPO_UK1 UNIQUE (
    K_ASIGNATURA, K_CODGRUPO, Q_ANIO, Q_PERIODO 
  )
) 
;

CREATE TABLE ESTUDIANTE_GRUPO 
(
  K_CODEST NUMBER(11, 0) NOT NULL 
, K_CODGRUPO NUMBER(10, 0) NOT NULL 
, V_NOTADEF NUMBER(3, 2) 
, CONSTRAINT ESTUDIANTE_GRUPO_PK PRIMARY KEY 
  (
    K_CODEST 
  , K_CODGRUPO 
  )
  ENABLE 
) 
;

CREATE TABLE SALON 
(
  K_SALON VARCHAR2(20 BYTE) NOT NULL 
, K_SEDE VARCHAR2(5 BYTE) NOT NULL 
, I_TIPO VARCHAR2(1 BYTE) NOT NULL 
, Q_CAPACIDAD NUMBER(3, 0) NOT NULL 
, CONSTRAINT SALON_PK PRIMARY KEY 
  (
    K_SALON 
  , K_SEDE 
  )
  ENABLE 
) 
;

CREATE TABLE NOTA 
(
  K_NOTA VARCHAR2(3 BYTE) NOT NULL 
, K_CODGRUPO NUMBER(10, 0) NOT NULL 
, V_PORCENTAJE NUMBER(3, 2) NOT NULL 
, CONSTRAINT NOTA_PK PRIMARY KEY 
  (
    K_NOTA 
  , K_CODGRUPO 
  )
  ENABLE 
) 
;

-- **TODO Crear constraints para validar que las notas est�n entre 0 y 5
CREATE TABLE ESTUDIANTE_NOTA 
(
  K_CODEST NUMBER(11, 0) NOT NULL 
, K_CODGRUPO NUMBER(10, 0) NOT NULL 
, K_NOTA VARCHAR2(3 BYTE) NOT NULL 
, V_NOTA NUMBER(3, 2) NOT NULL 
, CONSTRAINT ESTUDIANTE_NOTA_PK PRIMARY KEY 
  (
    K_CODEST 
  , K_CODGRUPO 
  , K_NOTA 
  )
  ENABLE 
, CONSTRAINT notes_validator CHECK (V_NOTA>=0 AND V_NOTA<=5)
) 
;

-- **TODO Crear un constraint para validar que el nivel de la ASIGNATURA est� entre 1 y 10
CREATE TABLE ASIGNATURA 
(
  K_ASIGNATURA NUMBER(7, 0) NOT NULL 
, K_PLAN VARCHAR2(10 BYTE) NOT NULL 
, N_NOMBRE VARCHAR2(50 BYTE) NOT NULL 
, Q_NROCREDITOS NUMBER(2, 0) 
, Q_NIVEL NUMBER(2, 0) NOT NULL
, CONSTRAINT ASIGNATURA_PK PRIMARY KEY 
  (
    K_ASIGNATURA 
  )
  ENABLE 
, CONSTRAINT nivel_validator CHECK (Q_NIVEL<10 AND Q_NIVEL>1) 
) 
;

-- **TODO Crear la tabla  GRHRSA con su respectiva llave primaria
CREATE TABLE GRHRSA
(
  K_CODGRHRSA NUMBER(10, 0) NOT NULL,
  K_CODGRUPO NUMBER(10, 0) NOT NULL,
  K_HORARIO NUMBER(10, 0) NOT NULL,
  K_SALON VARCHAR2(20 BYTE) NOT NULL,
  K_SEDE VARCHAR(5 BYTE) NOT NULL,
  CONSTRAINT CODGRHRSA_PK PRIMARY KEY
  (
    K_CODGRHRSA
  )
  ENABLE
)

CREATE TABLE SEDE 
(
  K_SEDE VARCHAR2(5 BYTE) NOT NULL 
, N_NOMBRE VARCHAR2(50 BYTE) NOT NULL 
, N_DIRECCION VARCHAR2(50 BYTE) NOT NULL 
, CONSTRAINT SEDE_PK PRIMARY KEY 
  (
    K_SEDE 
  )
  ENABLE 
) 
;

CREATE TABLE PLANCURRICULAR 
(
  K_PLAN VARCHAR2(10 BYTE) NOT NULL 
, N_NOMBRE VARCHAR2(50 BYTE) NOT NULL 
, CONSTRAINT PLANCURRICULAR_PK PRIMARY KEY 
  (
    K_PLAN 
  )
  ENABLE 
) 
;

ALTER TABLE GRUPO
ADD CONSTRAINT GRUPO_ASIGNATURA_FK FOREIGN KEY
(
  K_ASIGNATURA 
)
REFERENCES ASIGNATURA
(
  K_ASIGNATURA 
)
ENABLE;

ALTER TABLE GRUPO
ADD CONSTRAINT GRUPO_DOCENTE_FK FOREIGN KEY
(
  K_NIT 
)
REFERENCES DOCENTE
(
  K_NIT 
)
ENABLE;

ALTER TABLE ESTUDIANTE_GRUPO
ADD CONSTRAINT ESTUDIANTE_GRUPO_ESTUDIANTE_FK FOREIGN KEY
(
  K_CODEST 
)
REFERENCES ESTUDIANTE
(
  K_CODEST 
)
ENABLE;

ALTER TABLE ESTUDIANTE_GRUPO
ADD CONSTRAINT ESTUDIANTE_GRUPO_GRUPO_FK FOREIGN KEY
(
  K_CODGRUPO 
)
REFERENCES GRUPO
(
  K_CODGRUPO 
)
ENABLE;

ALTER TABLE SALON
ADD CONSTRAINT SALON_SEDE_FK FOREIGN KEY
(
  K_S 
)
REFERENCES SEDE
(
  K_SEDE 
)
ENABLE;

ALTER TABLE NOTA
ADD CONSTRAINT NOTA_GRUPO_FK FOREIGN KEY
(
  K_CODGRUPO 
)
REFERENCES GRUPO
(
  K_CODGRUPO 
)
ENABLE;

ALTER TABLE ESTUDIANTE_NOTA
ADD CONSTRAINT ESTUDIANTE_NOTA_NOTA_FK FOREIGN KEY
(
  K_NOTA 
, K_CODGRUPO 
)
REFERENCES NOTA
(
  K_NOTA 
, K_CODGRUPO 
)
ENABLE;

ALTER TABLE ESTUDIANTE_NOTA
ADD CONSTRAINT EST_NOTA_EST_GR_FK FOREIGN KEY
(
  K_CODEST 
, K_CODGRUPO 
)
REFERENCES ESTUDIANTE_GRUPO
(
  K_CODEST 
, K_CODGRUPO 
)
ENABLE;


ALTER TABLE GRHRSA
ADD CONSTRAINT GRHRSA_GRUPO_FK FOREIGN KEY
(
  K_CODGRUPO 
)
ALTER TABLE GRHRSA
ADD CONSTRAINT GRHRSA_HORARIO_FK FOREIGN KEY
(
  K_HORARIO 
)
-- **TODO Crear el constraint de llave for�nea entre GRHRSA y SALON
ALTER TABLE GRHRSA
ADD CONSTRAINT GRHRSA_SALON_FK FOREIGN KEY
(
  K_SALON, 
  K_SEDE 
) REFERENCES SALON 
(
  K_SALON,
  K_SEDE
)
ENABLE;

REFERENCES GRUPO
(
  K_CODGRUPO 
)
ENABLE;
REFERENCES HORARIO
(
  K_HORARIO 
)
ENABLE;

COMMENT ON COLUMN DOCENTE.K_NIT IS 'Número de Identidad';

COMMENT ON COLUMN DOCENTE.N_NOMBRE IS 'Nombre del Docente';

COMMENT ON COLUMN DOCENTE.N_APELLIDO IS 'Apellido del docente';

COMMENT ON COLUMN ESTUDIANTE.K_CODEST IS 'Código del estudiante';

COMMENT ON COLUMN ESTUDIANTE.N_NOMBRE IS 'Nombre del estudiante';

COMMENT ON COLUMN ESTUDIANTE.N_APELLIDO IS 'Apellido del estudiante';

COMMENT ON COLUMN HORARIO.K_HORARIO IS 'Código del Horario';

COMMENT ON COLUMN HORARIO.Q_HORAINI IS 'Hora inicial(formato militar : HH:MM)';

COMMENT ON COLUMN HORARIO.Q_HORAFIN IS 'Hora final(formato militar : HH:MM)';

COMMENT ON COLUMN HORARIO.N_DIA IS 'día de la semana (LU=Lunes, MAR=Martes, MI=...)';

COMMENT ON COLUMN GRUPO.K_CODGRUPO IS 'Código del Grupo';

COMMENT ON COLUMN GRUPO.K_ASIGNATURA IS 'Código de la asignatura';

COMMENT ON COLUMN GRUPO.Q_ANIO IS 'Anio';

COMMENT ON COLUMN GRUPO.N_GRUPO IS 'Identificador del Grupo';

COMMENT ON COLUMN GRUPO.Q_PERIODO IS 'Periodo';

COMMENT ON COLUMN GRUPO.Q_CUPMAX IS 'Cupo maximo';

COMMENT ON COLUMN SALON.K_SEDE IS 'Sede';

COMMENT ON COLUMN SALON.I_TIPO IS 'Tipo de salón(L=Laboratorio, S=Salón, A=Auditorio)';

COMMENT ON COLUMN SALON.Q_CAPACIDAD IS 'Capacidad del salón';

COMMENT ON COLUMN NOTA.V_PORCENTAJE IS 'Porcentaje de la nota(multiplicado por 100)';

COMMENT ON COLUMN ESTUDIANTE_NOTA.V_NOTA IS 'Valor de la nota';

COMMENT ON COLUMN ASIGNATURA.K_ASIGNATURA IS 'Código de la Asignatura';

COMMENT ON COLUMN ASIGNATURA.K_PLAN IS 'Plan Curricular';

COMMENT ON COLUMN ASIGNATURA.N_NOMBRE IS 'Nombre de la Asignatura';

COMMENT ON COLUMN ASIGNATURA.Q_NROCREDITOS IS 'Número de créditos';

COMMENT ON COLUMN ASIGNATURA.Q_NIVEL IS 'Número de nivel (o semestre)';

COMMENT ON COLUMN SEDE.K_SEDE IS 'Identificador del la sede';

COMMENT ON COLUMN SEDE.N_NOMBRE IS 'Nombre de la sede';

COMMENT ON COLUMN SEDE.N_DIRECCION IS 'Dirección de la sede';

COMMENT ON COLUMN PLANCURRICULAR.K_PLAN IS 'Identificador del Plan Curricular';

COMMENT ON COLUMN PLANCURRICULAR.N_NOMBRE IS 'Nombre del Plan Curricular';
